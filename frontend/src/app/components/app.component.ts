import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { MatDialog } from '@angular/material/dialog';
// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ - –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
import { AuthDialogComponent } from './auth-dialog.component';
import { CartService } from '../services/cart.service';
import { AuthService } from '../services/auth.service';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  cartCount = 0;
  currentUser: any = null;

  constructor(
    public router: Router,
    private dialog: MatDialog,
    private cartService: CartService,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
    console.log('üöÄ AppComponent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–æ—Ä–∑–∏–Ω—É
    this.cartService.cart$.subscribe(() => {
      this.cartCount = this.cartService.getCount();
      console.log('üõí –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:', this.cartCount);
    });
    
    // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    this.authService.currentUser$.subscribe(user => {
      this.currentUser = user;
      console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
      console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', !!user);
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    this.cartCount = this.cartService.getCount();
    this.currentUser = this.authService.getCurrentUser();
    
    console.log('üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
    console.log('   - –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:', this.cartCount);
    console.log('   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', this.currentUser);
    console.log('   - –¢–æ–∫–µ–Ω –≤ localStorage:', this.authService.getToken());
  }

  openAuthDialog(): void {
    console.log('ü™ü –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    const dialogRef = this.dialog.open(AuthDialogComponent, {
      width: '420px',
      data: { mode: 'login' }
    });

    dialogRef.afterClosed().subscribe((result) => {
      if (result) {
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        this.currentUser = this.authService.getCurrentUser();
      }
    });
  }

  logout(): void {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    this.authService.logout();
    this.currentUser = null;
    alert('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
  }
}