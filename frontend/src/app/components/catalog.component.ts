import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { CartService } from '../services/cart.service';

@Component({
  selector: 'app-catalog',
  templateUrl: './catalog.component.html',
  styleUrls: ['./catalog.component.css']
})
export class ProductListComponent implements OnInit {
  products: any[] = [];
  filteredProducts: any[] = [];
  searchQuery: string = '';
  selectedCategory: string = 'all';
  isLoading: boolean = true;

  constructor(
    private http: HttpClient,
    private cartService: CartService
  ) {}

  ngOnInit(): void {
    this.loadProducts();
  }

  loadProducts(): void {
    this.isLoading = true;
    this.http.get('http://localhost:8000/api/products').subscribe({
      next: (data: any) => {
        this.products = data;
        this.filteredProducts = data;
        this.isLoading = false;
        console.log('‚úÖ –¢–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.products);
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        this.products = [
          { 
            id: 1, 
            name: 'Chanel ‚Ññ5', 
            price: 4500, 
            category: 'women',
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∂–µ–Ω—Å–∫–∏–π –∞—Ä–æ–º–∞—Ç —Å –Ω–æ—Ç–∞–º–∏ –∏–ª–∞–Ω–≥-–∏–ª–∞–Ω–≥–∞ –∏ –≤–∞–Ω–∏–ª–∏',
            image: 'assets/images/chanel-no5.jpg'
          },
          { 
            id: 2, 
            name: 'Dior Sauvage', 
            price: 5200, 
            category: 'men',
            description: '–°–º–µ–ª—ã–π –º—É–∂—Å–∫–æ–π –ø–∞—Ä—Ñ—é–º —Å –∞–∫–∫–æ—Ä–¥–∞–º–∏ –ø–µ—Ä—Ü–∞ –∏ –∞–º–±—Ä—ã',
            image: 'assets/images/dior-sauvage.jpg'
          },
          { 
            id: 3, 
            name: 'Gucci Bloom', 
            price: 4800, 
            category: 'women',
            description: '–¶–≤–µ—Ç–æ—á–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –∞—Ä–æ–º–∞—Ç —Å –Ω–æ—Ç–∞–º–∏ –∂–∞—Å–º–∏–Ω–∞ –∏ —Ç—É–±–µ—Ä–æ–∑—ã',
            image: 'assets/images/gucci-bloom.jpg'
          },
          { 
            id: 4, 
            name: 'Bleu de Chanel', 
            price: 5500, 
            category: 'men',
            description: '–£—Ç–æ–Ω—á–µ–Ω–Ω—ã–π –º—É–∂—Å–∫–æ–π –ø–∞—Ä—Ñ—é–º —Å —Ü–∏—Ç—Ä—É—Å–æ–≤—ã–º–∏ –Ω–æ—Ç–∞–º–∏',
            image: 'assets/images/bleu-de-chanel.jpg'
          },
          { 
            id: 5, 
            name: 'J\'adore Dior', 
            price: 4900, 
            category: 'women',
            description: '–†–æ—Å–∫–æ—à–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –∞—Ä–æ–º–∞—Ç —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º–∏ –∞–∫–∫–æ—Ä–¥–∞–º–∏',
            image: 'assets/images/jadore-dior.jpg'
          },
          { 
            id: 6, 
            name: 'Armani Code', 
            price: 4700, 
            category: 'men',
            description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –º—É–∂—Å–∫–æ–π –ø–∞—Ä—Ñ—é–º —Å –Ω–æ—Ç–∞–º–∏ –ª–∏–º–æ–Ω–∞ –∏ —Ç–∞–±–∞–∫–∞',
            image: 'assets/images/armani-code.jpg'
          }
        ];
        this.filteredProducts = this.products;
        this.isLoading = false;
      }
    });
  }

  addToCart(product: any): void {
    this.cartService.addToCart(product);
    alert(`üéâ –¢–æ–≤–∞—Ä "${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
  }

  filterProducts(): void {
    this.filteredProducts = this.products.filter(product => {
      const matchesSearch = product.name.toLowerCase().includes(this.searchQuery.toLowerCase());
      const matchesCategory = this.selectedCategory === 'all' || product.category === this.selectedCategory;
      return matchesSearch && matchesCategory;
    });
  }

  onSearchChange(event: any): void {
    this.searchQuery = event.target.value;
    this.filterProducts();
  }

  onCategoryChange(category: string): void {
    this.selectedCategory = category;
    this.filterProducts();
  }

  openProduct(product: any): void {
    console.log('–û—Ç–∫—Ä—ã—Ç —Ç–æ–≤–∞—Ä:', product);
  }

  getCategoryName(category: string): string {
    const categoryNames: { [key: string]: string } = {
      'all': '–í—Å–µ —Ç–æ–≤–∞—Ä—ã',
      'women': '–ñ–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã',
      'men': '–ú—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã'
    };
    return categoryNames[category] || category;
  }
}